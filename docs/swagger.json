{
    "swagger": "2.0",
    "info": {
        "description": "Implements the Mailio server based on https://mirs.mail.io/ specifications",
        "title": "Mailio Server API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/.well-known/did-configuration.json": {
            "get": {
                "description": "Returns a DID Configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decentralized Identifiers"
                ],
                "summary": "Mailio Server DID Configuration",
                "responses": {}
            }
        },
        "/.well-known/did.json": {
            "get": {
                "description": "Returns a DID Document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decentralized Identifiers"
                ],
                "summary": "Mailio Server DID Document (public keys)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/did.Document"
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns a single verifiable credential by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verifiable Credentials"
                ],
                "summary": "Get verifiable credential by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VC ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/did.VerifiableCredential"
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/{requestId}/verify": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Checks if signature is valid and returns a boolean object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verifiable Credentials"
                ],
                "summary": "Verify a verifiable credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reference ID (request ID, could be anything)",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Verifiable credential to verify",
                        "name": "vc",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/did.VerifiableCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.VCValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/handshake": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new handshake",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Handshake"
                ],
                "summary": "Create a new handshake",
                "parameters": [
                    {
                        "description": "Handshake",
                        "name": "handshake",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Handshake"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/types.Handshake"
                        }
                    }
                }
            }
        },
        "/api/v1/handshake/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns a single handshake by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Handshake"
                ],
                "summary": "Get handshake by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Handshake ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Handshake"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a handshake",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Handshake"
                ],
                "summary": "Update a handshake",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Handshake ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Handshake",
                        "name": "handshake",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Handshake"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Handshake"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a handshake",
                "tags": [
                    "Handshake"
                ],
                "summary": "Delete a handshake",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Handshake ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Returns a JWS token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Login with username and password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nonce string",
                        "name": "nonce",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.JwsToken"
                        }
                    }
                }
            }
        },
        "/api/v1/nonce": {
            "get": {
                "description": "Returns a nonce which client needs to sign with their private key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Login and Registration challenge nonce",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.NonceResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Returns a JWS token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Account"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "register input",
                        "name": "emailPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InputRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.JwsToken"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "did.AuthorizedApplication": {
            "type": "object",
            "properties": {
                "approvalDate": {
                    "type": "string"
                },
                "domains": {
                    "description": "domains of the auth application: [example.com]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "target application did: did:example:123456789abcdefghi",
                    "type": "string"
                },
                "userPermissions": {
                    "description": "optional list of permissions specific to a target application",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "did.CredentialStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "https://example.edu/status/24\"",
                    "type": "string"
                },
                "type": {
                    "description": "CredentialStatusList2017",
                    "type": "string"
                }
            }
        },
        "did.CredentialSubject": {
            "type": "object",
            "properties": {
                "authorizedApplication": {
                    "$ref": "#/definitions/did.AuthorizedApplication"
                },
                "id": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "did.DID": {
            "type": "object"
        },
        "did.Document": {
            "type": "object",
            "properties": {
                "@context": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alsoKnownAs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authentication": {
                    "type": "array",
                    "items": {}
                },
                "id": {
                    "$ref": "#/definitions/did.DID"
                },
                "keyAgreement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/did.KeyAgreement"
                    }
                },
                "service": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/did.Service"
                    }
                },
                "verificationMethod": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/did.VerificationMethod"
                    }
                }
            }
        },
        "did.KeyAgreement": {
            "type": "object",
            "properties": {
                "controller": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "publicKeyJwk": {
                    "$ref": "#/definitions/did.PublicKeyJwk"
                },
                "publicKeyMultibase": {
                    "type": "string"
                },
                "type": {
                    "description": "usually X25519KeyAgreementKey2019",
                    "type": "string"
                }
            }
        },
        "did.Proof": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "prevent replay attacks",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "domain": {
                    "description": "prevent replay attacks",
                    "type": "string"
                },
                "jws": {
                    "type": "string"
                },
                "proofPurpose": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "verificationMethod": {
                    "type": "string"
                }
            }
        },
        "did.PublicKeyJwk": {
            "type": "object",
            "properties": {
                "key": {}
            }
        },
        "did.Service": {
            "type": "object",
            "properties": {
                "accept": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "routingKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceEndpoint": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "did.VerifiableCredential": {
            "type": "object",
            "properties": {
                "@context": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credentialStatus": {
                    "$ref": "#/definitions/did.CredentialStatus"
                },
                "credentialSubject": {
                    "$ref": "#/definitions/did.CredentialSubject"
                },
                "id": {
                    "type": "string"
                },
                "issuanceDate": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "proof": {
                    "$ref": "#/definitions/did.Proof"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "did.VerificationMethod": {
            "type": "object",
            "properties": {
                "controller": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "publicKeyJwk": {
                    "$ref": "#/definitions/did.PublicKeyJwk"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.Handshake": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "_rev": {
                    "description": "Rev is the revision number returned",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                },
                "rev": {
                    "type": "string"
                }
            }
        },
        "types.InputRegister": {
            "type": "object",
            "required": [
                "databasePassword",
                "ed25519SigningPublicKeyBase64",
                "email",
                "mailioAddress",
                "nonce",
                "signatureBase64",
                "x25519PublicKeyBase64"
            ],
            "properties": {
                "databasePassword": {
                    "description": "this is a password for couchdbs private user database",
                    "type": "string"
                },
                "ed25519SigningPublicKeyBase64": {
                    "description": "public key of the private key used to sign the nonce",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mailioAddress": {
                    "description": "Password                      string `json:\"password,omitempty\"`",
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "signatureBase64": {
                    "description": "signature of Nonce string",
                    "type": "string"
                },
                "x25519PublicKeyBase64": {
                    "description": "public encryption key",
                    "type": "string"
                }
            }
        },
        "types.JwsToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "types.NonceResponse": {
            "type": "object",
            "properties": {
                "nonce": {
                    "type": "string"
                }
            }
        },
        "types.VCValidationResponse": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}